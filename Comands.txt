# !Если команда нечего не вывела она завершилась успешно
# !Git не отслеживает пустые папки (пустые папки нельзя закомитить)
# !Файлы в git могут находится в 4 состояния
#  	Untracked(несопровождаемый) - не учитывается в системе git
#  	Unmodified(без изменений)
#   	Modefied(с изменениями)
#	Staged(подготовленный) - готов к комиту
# ! Последовательность действий добавления файла на сервер
#	git add .
#	git commit -m 'comment'
#	git push
# ! Последовательность действий обновления репозитория
	git fetch repName
	git pull
# ! Именование комитов чтото вроде #<проект>-<номер задачи> <описание>  #SHOP-1251 Испрален пересчет в корзине заказа
# ! Ветка это указатель на 1 из комитов в истории
# ! Head это указатель с какой веткой мы связаны и на каком комите мы находимся (checkout перемещает HEAD на другую ветку)

# ---------------------------------------------- #
# ------------ Глобальные настройки ------------ #
# ---------------------------------------------- #
	# Задать имя пользователя для всех репозиториев
	git config -- global user.name "Gavamot"
# ------------------------------------------------ #
# ------------ Работа с репозиториями ------------ #
# ------------------------------------------------ #
	# Инициализировать репозиторий (создать скрытую папку .git)
	git init

	# Выкачать репозиторий
	git clone http:\\github.com\545345
	# Добавляет к текущему репозиторию ссылку на удаленный под каким то именем
	git remote add repName "C:\rep\qq"

# ------------------------------------------------------------ #
# ------------ Добавление изменений в репозиторий ------------ #
# ------------------------------------------------------------ #
	# Привести файл к состоянию Staged ( '.' - все файлы либо имя конкретного файла)
	git add .

	# Закомить файлы (привести к состоянию Staged) 
	git commit -m 'comment text'

	# Залить изменения на сервер
	git push
# ----------------------------------------------------------- #
# ------------ Просмотр информации о репозитории ------------ #
# ----------------------------------------------------------- #
	# Посмотреть изменения
	git status

	# Посмотреть историю изменений
	git log
# ----------------------------------------- #
# ------------ Откат изменений ------------ #
# ----------------------------------------- #
	# Откат репозитория к состоянию после последнего комита
	git reset HEAD

	# Вернуть файлы к поледнему состоянию
	git checkout -- Comands.txt

	# Откат к указанному изменению с потерей всей истории
	git reset --hard <commit> #(<commit> - HEAD~3) - откат на 3 изменеия назад (чтобы откатится к текущему git reset --hard HEAD)
# -------------------------------------------------------------- #
# ------------ Обновление из удаленного репозитория ------------ #
# -------------------------------------------------------------- #
	# Возмет информацию о все изменениях и перетащих в наш репозиторий (никак не изменяет файлы)
	git fetch repName

	# Обновить файлы из репозитория
	git pull

	# Связать ветки
	git checkout --track origin/master

# ------------------------------------------ #
# ------------ Работа с ветками ------------ #
# ------------------------------------------ #
	# Создать ветку
	git branch name